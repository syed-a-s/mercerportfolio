Script started on Wed 17 Feb 2021 10:03:04 PM EST
]0;saadat_sa@cobra:~/CSC245/Prog1[?1034h[saadat_sa@cobra Prog1]$ cat dit[K[K[Keditop[Kr.cpp

#include <iostream>
#include <string>
#include <fstream>
#include <stdlib.h>
#include "linelist.h"

void saveLines(char *argv[], LineList &l);

int main(int argc, char *argvp[]) { 

    // Checks if user put file name
    if (argc > 1) { 
          
          // All variables for program
          ifstream infile(argvp[1]); 
          LineList list;                                            
          char choice; string newLine;
                      
          // Reads file and puts string into the line editor 
          while(getline(infile, newLine)) {
                list.insertLine(newLine);
          }
                      
          // The Line Editor 
          list.printList();
                      
          while (choice != 'E') { 

                cout << list.getCurrLineNum() << "> ";
                std::cin >> choice;
                       
                switch(choice) { 

                      case 'I':
                            cout << list.getCurrLineNum() << "> ";
                            cin.ignore();
                            getline (cin, newLine);
                            list.insertLine(newLine); 
                            break;
                      case 'D':
                            list.deleteLine();
                            break;
                      case 'L':
                            list.printList();
                            break;
                      case 'P':
                            list.movePrevLine();
                            break;
                      case 'N':
                            list.moveNextLine();
                            break;
                      case 'E':
                            saveLines(argvp, list);
                            infile.close(); 
                            break;
                      default :
                            break;
                    
                }
          }
    
    // Error message if user did not put a file name          
    } else { 
          cout << "Please run with a text file." << endl;
          exit(1);
    }
    
}

void saveLines(char *argv[], LineList &l) { 

      ofstream outfile;
      string filename = argv[1];
      
      outfile.open(filename.c_str());
      l.goToTop();
      
      for (int i = 1; i <= l.getLength(); i++) { 
            outfile << l.getCurrLine() << endl;
            l.moveNextLine();
      }
      
      outfile.close();
      
}






]0;saadat_sa@cobra:~/CSC245/Prog1[saadat_sa@cobra Prog1]$ cat linelist.cpp

#include <iostream>
#include "linelist.h"

LineList::LineList() { 

    LineNode *line = new LineNode;
    LineNode *line2 = new LineNode;
    
    line->info = topMessage;
    currLine = line;
    currLineNum = 0; // Unfortunately, I had to change this to 0 to make my program better
    length = 0;
    line2->info = bottomMessage;
    currLine->back = NULL;
    currLine->next = line2;
    line2->back = line;
    line2->next = NULL;
    
}

void LineList::goToTop() {
    // Post : Advances currLine to line 1 
    while (currLine->info != topMessage) 
        currLine = currLine->back;
    
    currLine = currLine->next;
    currLineNum = 1; 
}

void LineList::goToBottom() {
    // Post : Advances currLine to last line 
    while (currLine->info != bottomMessage)  
        currLine = currLine->next;
    
    currLine = currLine->back;
    currLineNum = length;
} 

void LineList::insertLine (string newLine) {

    // Post : newLine has been inserted after the current line
	  LineNode *line = new LineNode;
	  line->info = newLine;
	  line->back = currLine;
	  line->next = currLine->next;
	
	  currLine->next->back = line;
	  currLine->next = line;
	  currLine = currLine->next;
	  currLineNum++; length++;
     
}

void LineList::deleteLine() {

    // Post : deletes the current line leaving currentline
    //        pointing to line following
    if ((currLine->info != topMessage) 
        && (currLine->info != bottomMessage)) {
   	    LineNode *line = currLine;

	  currLine->next->back = currLine->back;
	  currLine->back->next = currLine->next;
	  currLine = currLine->next;

	  delete line;

	  if (currLineNum == length)
		    currLineNum--;
            
    length--;

	  if (currLine->info == topMessage)
		    currLine = currLine->next;
	
	  if (currLine->info == bottomMessage)
		    currLine = currLine->back;
   
    } 
    
}

void LineList::printList() { 

    LineNode *temp = new LineNode;
    temp = currLine;
    int lineNum = 1;
    
    while(temp->info != topMessage)
          temp = temp->back;
    temp = temp->next;
    
    while (temp->info != bottomMessage) {
            cout << lineNum << "> " << temp->info << endl;
            temp = temp->next;
            lineNum++;
    }
    
}

void LineList::moveNextLine() { 
    
    // Post : Advances currLine (unless already at last line)
    if (currLine->info != bottomMessage) { 
          if (currLine->info != bottomMessage) { 
                currLine = currLine->next;
                currLineNum++;
          }
    }
    
}

void LineList::movePrevLine() {
    
    // Post : Advances currLine (unless already at last line)
    if (currLine->info != topMessage) { 
          if (currLine->info != topMessage) { 
                currLine = currLine->back;
                currLineNum--;
          }
    }
    
} 

int LineList::getCurrLineNum() const { 
    return currLineNum ;
}

int LineList::getLength() const {
    return length;
}

string LineList::getCurrLine() const { 
    return currLine->info;
}
]0;saadat_sa@cobra:~/CSC245/Prog1[saadat_sa@cobra Prog1]$ c++ editor.cpp in[K[Klinelist.o
]0;saadat_sa@cobra:~/CSC245/Prog1[saadat_sa@cobra Prog1]$ ./a.out testfile
1> This is my first line.
2> This is my second line.
3> This is my third line.
3> P
2> I
2> A brand new line is inserted!
3> L
1> This is my first line.
2> This is my second line.
3> A brand new line is inserted!
4> This is my third line.
3> N
4> D
3> D
2> L
1> This is my first line.
2> This is my second line.
2> E
]0;saadat_sa@cobra:~/CSC245/Prog1[saadat_sa@cobra Prog1]$ exit
exit

Script done on Wed 17 Feb 2021 10:04:41 PM EST
