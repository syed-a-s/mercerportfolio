{"backend_state":"init","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-7fc6ca54-7620-468e-a9f0-bed12d6a1ced.json","kernel":"sage-9.4","kernel_error":"Kernel last terminated by signal SIGKILL.","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.5"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1637094223696,"exec_count":1,"id":"219c6d","input":"# items to load\ndef binary8bit(n):\n    ans=format(n,'b').zfill(8)\n    return(ans)\n\n# Use for encoding from integers to letters via ASCII codes\nalpha={i:chr(65+i) for i in range(26)}\nbeta={i+26:chr(97+i) for i in range(26)}\ngamma={i+52:chr(48+i) for i in range(10)}\ndelta={62:'+',63:'/'}\nalpha.update(beta)\nalpha.update(gamma)\nalpha.update(delta)\ndef text(t):\n    return(alpha[t])\n\n# Convert original message to ASCII base 10\ndef ToAscii(message):\n    ans = map(ord,message)\n    return ans\n\n# Convert ASCII to binary bits\ndef AsciiToBin(listAscii):\n    binaryAscii = ''\n    for x in listAscii:\n        binaryAscii += binary8bit(x)\n    return binaryAscii\n\n# Seperate binary string into chunks of six into a list\ndef BinaryListSix(binaryOfAscii):\n    binChunks = []\n    n = 6\n    for i in range(0, len(binaryOfAscii), n):\n        binChunks.append(binaryOfAscii[i:i+n])\n    return binChunks\n\n# Convert binary to decimal\ndef BinToDec(binChunks):\n    integers = []\n    for x in binChunks:\n        integers.append(int(x,2))\n    return integers\n\n# Convert Integer to Letter\ndef IntToLetter(binChunks):\n    encodedMsg = ''\n    # Convert binary to int\n    integers = BinToDec(binChunks)\n    # Encode message\n    for x in integers:\n        encodedMsg += text(x)\n    return encodedMsg\n","kernel":"sage-9.4","pos":1,"start":1637094223692,"state":"done","type":"cell"}
{"cell_type":"code","end":1637094223744,"exec_count":2,"id":"248bd3","input":"import base64\n\nmsg = 'DiscreteMathematicsIsFun'\nprint(\"Message before encoding : \", msg)\nlistAscii = list(ToAscii(msg))\nbinaryOfAscii = AsciiToBin(listAscii)\nbinChunks = BinaryListSix(binaryOfAscii)\nmsg = IntToLetter(binChunks) \nprint(\"Message after encoding : \", msg)\n\nbase64.b64decode(msg)","kernel":"sage-9.4","output":{"0":{"name":"stdout","text":"Message before encoding :  DiscreteMathematicsIsFun\nMessage after encoding :  RGlzY3JldGVNYXRoZW1hdGljc0lzRnVu\n"},"1":{"data":{"text/plain":"b'DiscreteMathematicsIsFun'"},"exec_count":2}},"pos":2,"start":1637094223705,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"5a36dc","input":"","pos":4,"state":"done","type":"cell"}
{"cell_type":"code","id":"57f05c","input":"","pos":3,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"1f5f9b","input":"## Base 64 Encoding Assignment","pos":0,"state":"done","type":"cell"}
{"id":0,"time":1638329301922,"type":"user"}
{"last_load":1637094212961,"type":"file"}