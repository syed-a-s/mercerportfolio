     1                                  SECTION .data
     2 00000000 00000000                saveEcxOuter: dd 0
     3 00000004 00000000                saveEcxInner: dd 0
     4 00000008 6F75746572              outerS: db "outer"
     5 0000000D 696E6E6572              innerS: db "inner"
     6                                  lenS1: EQU ($ - outerS)
     7                                  lenS2: EQU ($ - innerS)
     8                                  
     9                                  SECTION .text
    10                                  global _main
    11                                  _main:
    12                                  
    13 00000000 B918000000              mov ecx, 24
    14                                  outer:
    15 00000005 890D[00000000]          	mov [saveEcxOuter], ecx
    16                                  	; print within outer loop
    17 0000000B B804000000              		mov eax, 4 		; syswrite
    18 00000010 BB01000000              		mov ebx, 1 		; stdout
    19 00000015 B9[08000000]            		mov ecx, outerS		; starting address of string
    20 0000001A BA0A000000              		mov edx, lenS1		; length of string
    21 0000001F CD80                    		int 80h
    22 00000021 B950000000              	mov ecx, 80
    23                                  	inner:
    24                                  		; print within inner loop
    25 00000026 890D[04000000]          			mov [saveEcxInner], ecx
    26 0000002C B804000000              			mov eax, 4
    27 00000031 BB01000000              			mov ebx, 1
    28 00000036 B9[0D000000]            			mov ecx, innerS
    29 0000003B BA01000000              			mov edx, 1
    30 00000040 CD80                    			int 80h
    31 00000042 8B0D[04000000]          		mov ecx, [saveEcxInner]
    32 00000048 E2DC                    		loop inner
    33 0000004A 8B0D[00000000]          	mov ecx, [saveEcxOuter]
    34 00000050 E2B3                    	loop outer
    35                                  
    36 00000052 B801000000              mov eax, 1
    37 00000057 BB00000000              mov ebx, 0
    38 0000005C CD80                    int 80h
