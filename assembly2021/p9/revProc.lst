     1                                  ; NAME       : Syed Saadat
     2                                  ; DATE       : 11-15-21
     3                                  ; ASSIGNMENT : Reverse Array with Proc
     4                                  
     5                                  SECTION .data
     6 00000000 010000000200000003-     array1: dd      1,2,3,4,5
     7 00000009 000000040000000500-
     8 00000012 0000               
     9                                  len1:   EQU     ($-array1)
    10                                  
    11 00000014 F6FFFFFFF7FFFFFFF8-     array2: dd      -10, -9,-8,-7,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9
    12 0000001D FFFFFFF9FFFFFFFAFF-
    13 00000026 FFFFFBFFFFFFFCFFFF-
    14 0000002F FFFDFFFFFFFEFFFFFF-
    15 00000038 FFFFFFFF0000000001-
    16 00000041 000000020000000300-
    17 0000004A 000004000000050000-
    18 00000053 000600000007000000-
    19 0000005C 0800000009000000   
    20                                  len2:   EQU     ($-array2)
    21                                  
    22 00000064 000000000A00000014-     array3: dd  0,10,20,30,40,50,60,70,80,90
    23 0000006D 0000001E0000002800-
    24 00000076 0000320000003C0000-
    25 0000007F 004600000050000000-
    26 00000088 5A000000           
    27 0000008C 640000006E00000078-             dd  100,110,120,130,140,150,160,170,180,190
    28 00000095 000000820000008C00-
    29 0000009E 000096000000A00000-
    30 000000A7 00AA000000B4000000-
    31 000000B0 BE000000           
    32 000000B4 C8000000D2000000DC-             dd  200,210,220,230,240,250,260,270,280,290
    33 000000BD 000000E6000000F000-
    34 000000C6 0000FA000000040100-
    35 000000CF 000E01000018010000-
    36 000000D8 22010000           
    37 000000DC 2C0100003601000040-             dd  300,310,320,330,340,350,360,370,380,390
    38 000000E5 0100004A0100005401-
    39 000000EE 00005E010000680100-
    40 000000F7 00720100007C010000-
    41 00000100 86010000           
    42 00000104 900100009A010000A4-             dd  400,410,420,430,440,450,460,470,480,490,500
    43 0000010D 010000AE010000B801-
    44 00000116 0000C2010000CC0100-
    45 0000011F 00D6010000E0010000-
    46 00000128 EA010000F4010000   
    47                                  len3:   EQU ($-array3)
    48                                  
    49                                  SECTION .text
    50                                  global _main
    51                                  _main:
    52                                  
    53                                  start:
    54 00000000 B842010000              	mov eax, 322
    55                                  	
    56 00000005 BB[00000000]            	mov ebx, array1
    57 0000000A BA14000000              	mov edx, len1 
    58 0000000F E82A000000              	call revArray
    59                                  
    60 00000014 BB[14000000]            	mov ebx, array2
    61 00000019 BA50000000              	mov edx, len2
    62 0000001E E81B000000              	call revArray
    63                                  
    64 00000023 BB[64000000]            	mov ebx, array3
    65 00000028 BACC000000              	mov edx, len3
    66 0000002D E80C000000              	call revArray
    67                                  
    68                                  lastBreak:
    69                                  ; standard termination
    70 00000032 B801000000              mov eax, 1
    71 00000037 BB00000000              mov ebx, 0
    72 0000003C CD80                    int 80h 
    73                                  
    74                                  ;;; expects ebx to have the array and edx to have the length of the array
    75                                  ;;; reversed array will be stored back into ebx
    76                                  
    77                                  revArray:
    78 0000003E 60                      	pusha
    79 0000003F 89D1                    	mov ecx, edx 
    80 00000041 C1E902                  	shr ecx, 2	
    81                                  	; push ever element in array on to stack
    82                                  	pushElement:
    83 00000044 FF33                    		push dword [ebx]
    84 00000046 83C304                  		add ebx, 4
    85 00000049 E2F9                    	loop pushElement	
    86 0000004B 31DB                    	xor ebx, ebx
    87 0000004D 89D1                    	mov ecx, edx
    88 0000004F C1E902                  	shr ecx, 2
    89                                  	; pop every element back onto array
    90                                  	popElement:
    91 00000052 8F03                    		pop dword [ebx]
    92 00000054 83C304                  		add ebx, 4
    93 00000057 E2F9                    	loop popElement
    94 00000059 61                      	popa
    95 0000005A C3                      	ret
